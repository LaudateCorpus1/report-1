package com.atlassian.performance.tools.report.distribution

import org.hamcrest.Matchers.equalTo
import org.hamcrest.Matchers.hasSize
import org.junit.Assert.assertThat
import org.junit.Test

class HistogramTest {

    private val viewBoardLatencies = listOf(
        6294,
        1657,
        3448,
        1449,
        1446,
        1311,
        3220,
        1502,
        3242,
        3346,
        2882,
        1581,
        2939,
        1352,
        3651,
        2829,
        1709,
        3343,
        3104,
        1407,
        1310,
        3168,
        3225,
        3324,
        3068,
        1475,
        3283,
        3046,
        1366,
        3208,
        3034,
        2957,
        1516,
        1495,
        1573,
        1397,
        3474,
        1273,
        3021,
        3029,
        3073,
        3193,
        1483,
        1439,
        3242,
        3014,
        3205,
        3327,
        1439,
        3536,
        1583,
        2956,
        2928,
        1170,
        3134,
        1424,
        3039,
        1180,
        1971,
        3090,
        1550,
        3229,
        3087,
        1298,
        3262,
        1526,
        3245,
        1361,
        3149,
        2875,
        2908,
        1355,
        1497,
        1312,
        2961,
        3042,
        1563,
        1211,
        1626,
        3123,
        2853,
        1353,
        3246,
        1412,
        3169,
        1492,
        1346,
        2851,
        3279,
        2794,
        1286,
        1622,
        3389,
        1419,
        1587,
        3513,
        2897,
        1535,
        1595,
        1398,
        2981,
        3382,
        1303,
        1238,
        1341,
        1323,
        1465,
        2989,
        1340,
        1700,
        2896,
        3022,
        1351,
        1478,
        1309,
        2787,
        2787,
        1247,
        1422,
        1312,
        3205,
        1213,
        2749,
        1294,
        3026
    )

    @Test
    fun shouldPlot() {
        val actualFrequencies = Histogram().plot(viewBoardLatencies)

        val expectedFrequencies = listOf(
            RelativeFrequency(1170.0..1272.48, 0.048),
            RelativeFrequency(1272.48..1374.96, 0.16),
            RelativeFrequency(1374.96..1477.44, 0.104),
            RelativeFrequency(1477.44..1579.92, 0.096),
            RelativeFrequency(1579.92..1682.4, 0.056),
            RelativeFrequency(1682.4..1784.88, 0.016),
            RelativeFrequency(1784.88..1887.3600000000001, 0.0),
            RelativeFrequency(1887.3600000000001..1989.8400000000001, 0.008),
            RelativeFrequency(1989.8400000000001..2092.32, 0.0),
            RelativeFrequency(2092.32..2194.8, 0.0),
            RelativeFrequency(2194.8..2297.2799999999997, 0.0),
            RelativeFrequency(2297.2799999999997..2399.76, 0.0),
            RelativeFrequency(2399.76..2502.24, 0.0),
            RelativeFrequency(2502.24..2604.7200000000003, 0.0),
            RelativeFrequency(2604.7200000000003..2707.2, 0.0),
            RelativeFrequency(2707.2..2809.6800000000003, 0.032),
            RelativeFrequency(2809.6800000000003..2912.16, 0.064),
            RelativeFrequency(2912.16..3014.6400000000003, 0.064),
            RelativeFrequency(3014.6400000000003..3117.12, 0.104),
            RelativeFrequency(3117.12..3219.6, 0.072),
            RelativeFrequency(3219.6..3322.08, 0.08),
            RelativeFrequency(3322.08..3424.56, 0.048),
            RelativeFrequency(3424.56..3527.04, 0.024),
            RelativeFrequency(3527.04..3629.52, 0.008),
            RelativeFrequency(3629.52..3732.0, 0.008),
            RelativeFrequency(3732.0..3834.48, 0.0),
            RelativeFrequency(3834.48..3936.96, 0.0),
            RelativeFrequency(3936.96..4039.44, 0.0),
            RelativeFrequency(4039.44..4141.92, 0.0),
            RelativeFrequency(4141.92..4244.4, 0.0),
            RelativeFrequency(4244.4..4346.88, 0.0),
            RelativeFrequency(4346.88..4449.360000000001, 0.0),
            RelativeFrequency(4449.360000000001..4551.84, 0.0),
            RelativeFrequency(4551.84..4654.32, 0.0),
            RelativeFrequency(4654.32..4756.8, 0.0),
            RelativeFrequency(4756.8..4859.280000000001, 0.0),
            RelativeFrequency(4859.280000000001..4961.76, 0.0),
            RelativeFrequency(4961.76..5064.24, 0.0),
            RelativeFrequency(5064.24..5166.72, 0.0),
            RelativeFrequency(5166.72..5269.2, 0.0),
            RelativeFrequency(5269.2..5371.68, 0.0),
            RelativeFrequency(5371.68..5474.16, 0.0),
            RelativeFrequency(5474.16..5576.64, 0.0),
            RelativeFrequency(5576.64..5679.12, 0.0),
            RelativeFrequency(5679.12..5781.6, 0.0),
            RelativeFrequency(5781.6..5884.08, 0.0),
            RelativeFrequency(5884.08..5986.56, 0.0),
            RelativeFrequency(5986.56..6089.04, 0.0),
            RelativeFrequency(6089.04..6191.52, 0.0),
            RelativeFrequency(6191.52..6294.0, 0.008)
        )
        assertThat(actualFrequencies, equalTo(expectedFrequencies))
    }

    @Test
    fun shouldSumToOne() {
        val frequencies = Histogram().plot(viewBoardLatencies)

        val totalRelativeFrequency = frequencies.sumByDouble { it.frequency }
        assertThat(totalRelativeFrequency, equalTo(1.0))
    }

    @Test
    fun shouldPlotNoData() {
        val data = emptyList<Int>()

        val frequencies = Histogram().plot(data)

        assertThat(frequencies, hasSize(0))
    }
}